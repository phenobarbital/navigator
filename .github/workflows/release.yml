name: Python package build and publish

on:
  release:
    types: [created]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install twine

      - name: Build wheels on Ubuntu
        if: matrix.os == 'ubuntu-latest'
        uses: RalfG/python-wheels-manylinux-build@v0.7.1-manylinux2014_x86_64
        with:
          python-versions: 'cp310-cp310 cp311-cp311 cp312-cp312'  # Match Flowtask exactly
          build-requirements: 'cython setuptools wheel'  # Simplified like Flowtask
          system-packages: 'libmemcached-devel openssl-devel zlib-devel postgresql-devel'

      - name: Upload wheel artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-py${{ matrix.python-version }}
          path: dist/*.whl

  build-source:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build setuptools wheel

      - name: Build source distribution
        run: python -m build --sdist

      - name: Upload source artifacts
        uses: actions/upload-artifact@v4
        with:
          name: source-dist
          path: dist/*.tar.gz

  deploy:
    needs: [build, build-source]
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    environment:
      name: pypi
      url: https://pypi.org/p/navigator-api
    permissions:
      id-token: write  # For trusted publishing
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist-artifacts

      - name: Move wheel files to dist directory
        run: |
          mkdir -p dist
          find dist-artifacts -name '*.whl' -exec mv {} dist/ \;
          find dist-artifacts -name '*.tar.gz' -exec mv {} dist/ \;

      - name: List files in dist
        run: ls -l dist

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install twine
        run: pip install twine

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.NAVIGATOR_API_PYPI_API_TOKEN }}
        run: |
          uv tool install twine
          uv tool run twine upload dist/*-manylinux*.whl --username __token__ --password ${{ secrets.NAVIGATOR_API_PYPI_API_TOKEN }}
